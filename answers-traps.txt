1.哪些寄存器保存函数的参数？例如，在main对printf的调用中，哪个寄存器保存13？
a0-a7 存储了函数调用的参数; 13 被存在了a2寄存器中

2.main的汇编代码中对函数f的调用在哪里？对g的调用在哪里(提示：编译器可能会将函数内联）
没有这样的代码。 g 被内联到 f 中，然后 f 又被进一步内联到 main() 中。所以看到的不是函数跳转，而是优化后的内联函数

3.printf函数位于哪个地址？
位于0X0000000000000616地址中：ra=pc=0x30=48，1510(ra)=1510+48=1558=0x616

4.在main中printf的jalr之后的寄存器ra中有什么值？
0x38(ra=pc+4)

5.运行以下代码。
unsigned int i = 0x00646c72;
printf("H%x Wo%s", 57616, &i);
程序的输出是什么？
%x 是按 16 进制输出，57616=0xe110，所以输出的前半段是 He110；ASCII 码中 0x64 对应 d，0x6c 对应 l，0x72 对应 r， RISC-V 为小端存储（低地址存 0x72），且 %s 从低地址开始读取数据输出，所以会输出 rld，于是输出的后半段就是 World。

输出取决于RISC-V小端存储的事实。如果RISC-V是大端存储，为了得到相同的输出，你会把i设置成什么？是否需要将57616更改为其他值？
(小端：较高的有效字节存放在较高的的存储器地址，较低的有效字节存放在较低的存储器地址。
大端：较高的有效字节存放在较低的存储器地址，较低的有效字节存放在较高的存储器地址。)
如果是大端存储，将i设置为0x726c6400；57616不需要更改

6.在下面的代码中，“y=”之后将打印什么(注：答案不是一个特定的值）？为什么会发生这种情况？
printf("x=%d y=%d", 3);
此时，printf尝试读的参数数量比提供的参数数量多：printf的format字符串储存在寄存器a0中，第二个参数 3 储存在寄存器 a1 中，想要读取的第三个参数储存在a2寄存器中，所以 y 的输出依赖于a2 寄存器的值。